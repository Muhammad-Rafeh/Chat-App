[{"E:\\MERN\\chat-app\\client\\src\\index.js":"1","E:\\MERN\\chat-app\\client\\src\\App.js":"2","E:\\MERN\\chat-app\\client\\src\\reportWebVitals.js":"3","E:\\MERN\\chat-app\\client\\src\\redux\\store.js":"4","E:\\MERN\\chat-app\\client\\src\\components\\BodyParent.js":"5","E:\\MERN\\chat-app\\client\\src\\components\\Nav.js":"6","E:\\MERN\\chat-app\\client\\src\\components\\Login.js":"7","E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginReducers.js":"8","E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchReducers.js":"9","E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomReducers.js":"10","E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListReducers.js":"11","E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchActions.js":"12","E:\\MERN\\chat-app\\client\\src\\components\\RoomList.js":"13","E:\\MERN\\chat-app\\client\\src\\components\\NewRoom.js":"14","E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginActions.js":"15","E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchTypes.js":"16","E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomTypes.js":"17","E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginTypes.js":"18","E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListTypes.js":"19","E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListActions.js":"20","E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomActions.js":"21","E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomReducers.js":"22","E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomTypes.js":"23","E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomActions.js":"24","E:\\MERN\\chat-app\\client\\src\\components\\MessageList.js":"25","E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListReducers.js":"26","E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListTypes.js":"27","E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListActions.js":"28","E:\\MERN\\chat-app\\client\\src\\components\\SendMessage.js":"29","E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageReducers.js":"30","E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageTypes.js":"31","E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageActions.js":"32","E:\\MERN\\chat-app\\client\\src\\components\\SignUp.js":"33","E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpActions.js":"34","E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpTypes.js":"35","E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpReducers.js":"36"},{"size":629,"mtime":1613019536207,"results":"37","hashOfConfig":"38"},{"size":911,"mtime":1622284430133,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499205700000,"results":"40","hashOfConfig":"38"},{"size":962,"mtime":1622277973058,"results":"41","hashOfConfig":"38"},{"size":733,"mtime":1622285379277,"results":"42","hashOfConfig":"38"},{"size":2388,"mtime":1629741069137,"results":"43","hashOfConfig":"38"},{"size":1968,"mtime":1622303216137,"results":"44","hashOfConfig":"38"},{"size":1066,"mtime":1619791531544,"results":"45","hashOfConfig":"38"},{"size":854,"mtime":1619296988909,"results":"46","hashOfConfig":"38"},{"size":764,"mtime":1619290826980,"results":"47","hashOfConfig":"38"},{"size":843,"mtime":1617937373487,"results":"48","hashOfConfig":"38"},{"size":1160,"mtime":1619297249755,"results":"49","hashOfConfig":"38"},{"size":2123,"mtime":1621871990273,"results":"50","hashOfConfig":"38"},{"size":1440,"mtime":1622222582886,"results":"51","hashOfConfig":"38"},{"size":1308,"mtime":1619291649694,"results":"52","hashOfConfig":"38"},{"size":146,"mtime":1618680609168,"results":"53","hashOfConfig":"38"},{"size":152,"mtime":1619288023044,"results":"54","hashOfConfig":"38"},{"size":140,"mtime":1612930041875,"results":"55","hashOfConfig":"38"},{"size":158,"mtime":1617687781507,"results":"56","hashOfConfig":"38"},{"size":1088,"mtime":1619295316063,"results":"57","hashOfConfig":"38"},{"size":1434,"mtime":1619793560516,"results":"58","hashOfConfig":"38"},{"size":860,"mtime":1619853061995,"results":"59","hashOfConfig":"38"},{"size":172,"mtime":1619799498879,"results":"60","hashOfConfig":"38"},{"size":854,"mtime":1619852866966,"results":"61","hashOfConfig":"38"},{"size":2680,"mtime":1629741139819,"results":"62","hashOfConfig":"38"},{"size":1077,"mtime":1621509586340,"results":"63","hashOfConfig":"38"},{"size":235,"mtime":1621509362331,"results":"64","hashOfConfig":"38"},{"size":1423,"mtime":1621509724411,"results":"65","hashOfConfig":"38"},{"size":1416,"mtime":1622196445996,"results":"66","hashOfConfig":"38"},{"size":843,"mtime":1621423040143,"results":"67","hashOfConfig":"38"},{"size":175,"mtime":1621342699438,"results":"68","hashOfConfig":"38"},{"size":1562,"mtime":1621504992200,"results":"69","hashOfConfig":"38"},{"size":2224,"mtime":1622303937756,"results":"70","hashOfConfig":"38"},{"size":1225,"mtime":1622277151266,"results":"71","hashOfConfig":"38"},{"size":146,"mtime":1622275530844,"results":"72","hashOfConfig":"38"},{"size":713,"mtime":1622285609887,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ddjkb7",{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"E:\\MERN\\chat-app\\client\\src\\index.js",[],["154","155"],"E:\\MERN\\chat-app\\client\\src\\App.js",["156"],"// import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp'\n//import RoomList from './components/RoomList';\nimport Nav from './components/Nav'\nimport BodyParent from './components/BodyParent';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route exact path='/'>\n                <Login /> \n            </Route>\n            <Route exact path='/signup'>\n                <SignUp /> \n            </Route>\n            <Route exact path='/app'>\n                <BodyParent /> \n            </Route>\n          </Switch>\n        </div>\n      </Router>\n       \n    </Provider>\n   \n  );\n}\n\nexport default App;\n","E:\\MERN\\chat-app\\client\\src\\reportWebVitals.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\store.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\BodyParent.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\Nav.js",["157"],"import React, { useState ,useEffect } from 'react'\r\nimport ChatButton from './NewRoom';\r\nimport UserImage from '../assets/user1.png' ;\r\nimport SearchIcon from '../assets/searchIcon.png';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'; \r\nimport { search } from '../redux/search/searchActions';\r\nimport '../App.css' ;\r\nimport socketIoClient from 'socket.io-client';\r\nconst socket = socketIoClient(\"http://localhost:5000\");   //was initially in use effect line 16\r\n\r\n\r\nfunction Nav() {\r\n\r\n    useEffect(()=>{\r\n        \r\n        socket.emit(\"room\",\"tuu mera puatr chutti kar\");\r\n    },[])\r\n    \r\n    \r\n\r\n    const username = useSelector(state => state.loginReducers.username )\r\n\r\n    const [ emailSearch , setEmailSearch ] = useState('');\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleSearch = () => {\r\n         \r\n          dispatch(search(emailSearch));\r\n    }\r\n\r\n    const searchUsername = useSelector(state=>state.searchReducers.searchedUser.username);\r\n    const userFound = useSelector(state=>state.searchReducers.userFound);\r\n    \r\n    const handleKeyPress = (event) => {\r\n        if(event.charCode==13){\r\n            handleSearch();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"nav_n_search_wrapper\" >\r\n            <div className=\"nav_wrapper\">\r\n                <img id=\"nav_img\" src={UserImage} alt=\"User\" /> \r\n                <p id=\"nav_username\">{username}</p> \r\n            </div>\r\n            <div id=\"searchbar_wrapper\">\r\n                <input className=\"email_search\" type=\"email\" name=\"email\" onChange={e => setEmailSearch(e.target.value)} value={emailSearch} placeholder=\"Search by Email\" onKeyPress={handleKeyPress}/>\r\n                <input id=\"nav_searchicon\" type=\"image\" src={SearchIcon} alt=\"search icon\"  onClick={handleSearch} />\r\n            </div>\r\n            <hr id=\"hrForSpace\"/>\r\n            {userFound ?  <div id=\"search_user_wrapper\">\r\n                            <div id=\"search_user_nested_wrapper\" >\r\n                                <img id=\"search_user_img\" src={UserImage} alt=\"User\" />\r\n                                <p id=\"search_user_name\">{searchUsername}</p> \r\n                            </div>\r\n                            <ChatButton />  \r\n                        </div>     \r\n                         : \"\"}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Nav\r\n","E:\\MERN\\chat-app\\client\\src\\components\\Login.js",["158"],"import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux';  // useSelector ,\r\nimport { login } from '../redux/login/loginActions';\r\nimport UserImage from '../assets/user1.png' ; \r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n\r\n    //redux states\r\n    //const { loggingIn , loggedIn } = useSelector;\r\n    const loggedIn = useSelector(state => state.loginReducers.loggedIn);\r\n    const dispatch = useDispatch();\r\n    //\r\n\r\n    const{ register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(login(data));\r\n    }\r\n\r\n    return (\r\n        <div class=\"auth_bg\">\r\n            <div class=\"auth_user_img_wrapper\">\r\n                <img class=\"auth_user_img\" src={UserImage} />\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"auth_input_wrapper\">\r\n                   \r\n                    <input class=\"auth_input\" type='text' name='username' ref={register({ required : true , minLength : 3})} placeholder=\"Username\" />\r\n                    {errors.username && <p>Username is invalid</p>}\r\n                </div>\r\n                <div class=\"auth_input_wrapper\">\r\n                    \r\n                    <input class=\"auth_input\" type='text' name='password' ref={register({ required : true , minLength : 3})} placeholder=\"Password\"/>\r\n                    {errors.password && <p>Password is invalid</p>}\r\n                </div>\r\n                <div class=\"auth_input_wrapper\">\r\n                    <input class=\"auth_button\" type='submit'  name=\"submit\" value='Login'/>\r\n                    {   loggedIn ? <Redirect exact to=\"/app\" /> : <Redirect exact to=\"/\" /> }\r\n                    <Link to=\"/signup\" class=\"auth_link\" >or Sign Up</Link>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchActions.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\RoomList.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\NewRoom.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginActions.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\search\\searchTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\login\\loginTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\roomList\\roomListActions.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\newRoom\\newRoomActions.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\selectedRoom\\selectedRoomActions.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\MessageList.js",["159","160"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { messageList } from '../redux/messageList/messageListActions';\r\nimport UserImage from '../assets/user1.png' ;\r\nimport { messageListRefresh } from '../redux/messageList/messageListActions';\r\nimport { sendMessageReset } from '../redux/sendMessage/sendMessageActions';\r\nimport SendMessage from './SendMessage';\r\n\r\nimport socketIoClient from 'socket.io-client';\r\nconst socket = socketIoClient(\"http://localhost:5000\"); //was initially at line 40 above use effect\r\nfunction MessageList(){\r\n\r\n    const roomId = useSelector(state => state.selectedRoomReducers.roomId);\r\n    const messages = useSelector(state => state.messageListReducer.messageList);\r\n    let refresh = useSelector(state => state.messageListReducer.refresh);\r\n    const messageSent = useSelector(state => state.sendMessageReducer.messageSent);\r\n    const userId = useSelector(state => state.loginReducers._id);\r\n    const dispatch = useDispatch();\r\n\r\n    const messageScrollRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (messageScrollRef) {\r\n          messageScrollRef.current.addEventListener('DOMNodeInserted', event => {\r\n            const { currentTarget: target } = event;\r\n            target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\r\n          });\r\n        }\r\n      }, [])\r\n     \r\n\r\n    useEffect(()=>{\r\n\r\n        dispatch(messageList(roomId));\r\n        //console.log(\"hi\");\r\n        dispatch(sendMessageReset());\r\n\r\n    },[dispatch,roomId,messageSent]);\r\n   \r\n    useEffect(()=>{\r\n        \r\n        socket.on(\"recieveMessage\",theRoomId=>{\r\n            console.log(\"message recienved\");\r\n            if(theRoomId===roomId){\r\n                dispatch(messageListRefresh());\r\n                dispatch(messageList(roomId));\r\n                console.log(\"refreshed\")\r\n            }\r\n        });\r\n        \r\n    },[refresh,roomId,socket,dispatch])\r\n\r\n//useEffect(()=>{})\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"messageList_header_wrapper\">\r\n                <img className=\"messageList_header_img\" src={UserImage} alt=\"User\" /> \r\n            </div>\r\n            <div className=\"messageList_wrapper\" ref={messageScrollRef}>\r\n            {messages.map((message)=>{\r\n                return(\r\n                    <div key={message._id} className={userId==message.user_id ? \"from_user\":\"from_other_user\"}>\r\n                        <p>{message.message_line}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n            <SendMessage />\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default MessageList;","E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\messageList\\messageListActions.js",[],"E:\\MERN\\chat-app\\client\\src\\components\\SendMessage.js",["161"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'; \r\nimport { sendMessage } from '../redux/sendMessage/sendMessageActions';\r\n\r\nfunction SendMessage() {\r\n\r\n    const [ messageContent , setMessageContent ] = useState(\"\");\r\n\r\n    const roomId = useSelector(state => state.selectedRoomReducers.roomId);\r\n    const userId = useSelector(state => state.loginReducers._id);\r\n    const messageSent = useSelector(state => state.sendMessageReducer.messageSent);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.charCode == 13){\r\n            handleSendMessage();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(messageSent){\r\n            setMessageContent(\"\");\r\n        }\r\n    },[messageSent])\r\n\r\n    const handleSendMessage = () => {\r\n            //console.log(\"handle send essage activated\")\r\n            dispatch(sendMessage({roomId , userId , messageContent}));\r\n\r\n    }\r\n\r\n    return (\r\n       <div className=\"send_message_wrapper\">\r\n           <input className=\"send_message_input\" placeholder=\"Type a message\" type=\"text\" onChange={e => setMessageContent(e.target.value)} value={messageContent} onKeyPress={handleKeyPress}/>\r\n           {/* <button className=\"send_message_button\" onClick={handleSendMessage} >SEND</button> */}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default SendMessage;","E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageReducers.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\sendMessage\\sendMessageActions.js",[],["162","163"],"E:\\MERN\\chat-app\\client\\src\\components\\SignUp.js",["164"],"import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport UserImage from '../assets/user1.png' ; \r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux';  // useSelector ,\r\nimport { signUp} from '../redux/signUp/signUpActions';\r\nimport { Link , Redirect } from 'react-router-dom';\r\n\r\nfunction SignUp() {\r\n\r\n    //redux states\r\n    //const { loggingIn , loggedIn } = useSelector;\r\n    const signedIn = useSelector(state=>state.signUpReducer.signedIn); \r\n\r\n    const dispatch = useDispatch();\r\n    //\r\n\r\n    const{ register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(signUp(data));\r\n    }\r\n\r\n    return (\r\n        <div class=\"auth_bg\">\r\n            <div class=\"auth_user_img_wrapper\">\r\n                <img class=\"auth_user_img\" src={UserImage} />\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div class=\"auth_input_wrapper\">\r\n                    <input class=\"auth_input\" type='text' name='username' ref={register({ required : true , minLength : 3})} placeholder=\"Username\" />\r\n                    {errors.username && <p>Username is invalid</p>}\r\n                </div>\r\n             \r\n                <div class=\"auth_input_wrapper\">\r\n                    <input class=\"auth_input\" type=\"email\" name=\"email\" ref={register({ required : true, minlength : 3 })} placeholder=\"Email\" />\r\n                    {errors.username && <p>email is invalid</p>}\r\n                </div>\r\n               \r\n                <div class=\"auth_input_wrapper\">\r\n                    \r\n                    <input class=\"auth_input\" type='text' name='password' ref={register({ required : true , minLength : 3})} placeholder=\"Password\"/>\r\n                    {errors.password && <p>Password is invalid</p>}\r\n                </div>\r\n\r\n                <div class=\"auth_input_wrapper\">\r\n                    <input class=\"auth_button\" type='submit'  name=\"submit\" value='SignUp'/>\r\n                    <Link exact to=\"/\" class=\"auth_link\"> or Login</Link>\r\n                    { signedIn ? <Redirect to=\"/\" /> : \"\"}\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;\r\n","E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpActions.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpTypes.js",[],"E:\\MERN\\chat-app\\client\\src\\redux\\signUp\\signUpReducers.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":11},{"ruleId":"173","severity":1,"message":"174","line":37,"column":26,"nodeType":"175","messageId":"176","endLine":37,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":27,"column":17,"nodeType":"179","endLine":27,"endColumn":62},{"ruleId":"180","severity":1,"message":"181","line":52,"column":7,"nodeType":"182","endLine":52,"endColumn":39,"suggestions":"183"},{"ruleId":"173","severity":1,"message":"174","line":64,"column":61,"nodeType":"175","messageId":"176","endLine":64,"endColumn":63},{"ruleId":"173","severity":1,"message":"174","line":17,"column":23,"nodeType":"175","messageId":"176","endLine":17,"endColumn":25},{"ruleId":"165","replacedBy":"184"},{"ruleId":"167","replacedBy":"185"},{"ruleId":"177","severity":1,"message":"178","line":27,"column":17,"nodeType":"179","endLine":27,"endColumn":62},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["188"],["186"],["187"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},"Update the dependencies array to be: [refresh, roomId, dispatch]",{"range":"191","text":"192"},[1950,1982],"[refresh, roomId, dispatch]"]